# for each folder in rust/
# generate a new workflow for each folder in rust/
name: Generate Build Matrix
on: push

jobs:
  manifest:
    runs-on: ubuntu-latest

    outputs:
      build_matrix: ${{ steps.generate_build_matrix.outputs.build_matrix }}
      is_empty: ${{ steps.generate_build_matrix.outputs.is_empty }}

    # check out the repo
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: git fetch
      - run: git checkout HEAD

      - name: Generate Build matrix
        id: generate_build_matrix
        # generate build matrix by checking out changes in rust/
        run: |
          # get the list of changed folders in the current commit
          changed_folders=$(git diff --name-only HEAD | grep -oP 'rust/\K[^/]*' | sort -u)
          # if there are no changes, exit
          if [ -z "$changed_folders" ]; then
            echo "::set-output name=is_empty::true"
            exit 0
          fi
          # generate the build matrix
          build_matrix=$(echo "$changed_folders" | sed 's/^/- rust\/\0\/pkg/g')
          echo "::set-output name=build_matrix::$build_matrix"
          echo "::set-output name=is_empty::false"

  build:
    needs: manifest
    runs-on: ubuntu-latest

    strategy:
      matrix: ${{ fromJson(needs.manifest.outputs.build_matrix) }}

    steps:
      - name: Test
        run: echo ${{ matrix.path }}